#!/bin/bash
set -eu

GIT_ROOT="${GIT_ROOT:-$(git rev-parse --show-toplevel)}"
. "${GIT_ROOT}/bin/include/versioning"
. "${GIT_ROOT}/.envrc"

export DOCKER_IMAGE_TAG=${VERSION_TAG}

echo "Test logs are here: /tmp/cf-operator-tests.log"

if [ -z ${TEST_NAMESPACE+x} ]; then
  TEST_NAMESPACE="test$(date +%s)"
  export TEST_NAMESPACE

  remove_namespace() {
    kubectl delete namespace --wait=false --grace-period=60 "$TEST_NAMESPACE"
  }
  trap remove_namespace EXIT

  kubectl create namespace "$TEST_NAMESPACE"
fi

bin/apply-crds

kubectl get customresourcedefinitions

GOVER_FILE=${GOVER_FILE:-gover-integration.coverprofile}

pkgs="code.cloudfoundry.org/cf-operator/cmd/...,\
code.cloudfoundry.org/cf-operator/pkg/bosh/...,\
code.cloudfoundry.org/cf-operator/pkg/credsgen/...,\
code.cloudfoundry.org/cf-operator/pkg/kube/operator/...,\
code.cloudfoundry.org/cf-operator/pkg/kube/controllers/...,\
code.cloudfoundry.org/cf-operator/pkg/kube/util/...,\
code.cloudfoundry.org/cf-operator/pkg/kube/config/..."

# Run code coverage only in CI
if [ -n "$COVERAGE" ]; then COV_ARG="-cover -outputdir=./code-coverage  -coverprofile=${GOVER_FILE} -coverpkg ${pkgs}"; fi

mkdir -p code-coverage
ginkgo --slowSpecThreshold=50 $COV_ARG integration/

